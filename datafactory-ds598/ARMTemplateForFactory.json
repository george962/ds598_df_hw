{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactory-ds598"
		},
		"GitHub_credential": {
			"type": "secureString",
			"metadata": "Secure string for 'credential' of 'GitHub'"
		},
		"Storage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Storage'"
		},
		"Air_Pollution_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": " http://api.openweathermap.org/ "
		},
		"GitHub_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "george962"
		},
		"Historical_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://history.openweathermap.org/"
		},
		"KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://OpenWeather.vault.azure.net/"
		},
		"Storage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ds598storage.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Air_Pollution')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://OpenWeather.vault.azure.net/secrets/OpenWeatherAPI?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net/"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Air_Pollution",
								"type": "DatasetReference",
								"parameters": {
									"lat": "42.3601",
									"lon": "-71.0589",
									"start": "@div(sub(ticks(utcNow()), 315360000000000), ticks('1970-01-01T00:00:00Z'), 10000000)",
									"end": "@div(ticks(utcNow()), ticks('1970-01-01T00:00:00Z')), 10000000)",
									"appid": "@activity('Web1').output.value"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_Air_Pollution",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Current_Index": {
						"type": "Integer"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Air_Pollution')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_Air_Pollution')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historical_Weather')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://openweather.vault.azure.net/secrets/OpenWeatherAPI/945ba958d3f544448ee21400a2abbd81?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0, 52)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Historical_Weather",
											"type": "DatasetReference",
											"parameters": {
												"start": "@div(sub(ticks(addDays(utcNow(), add(-7, mul(item(), -7)))), ticks('1970-01-01T00:00:00Z')), 10000000)",
												"end": "@div(sub(ticks(addDays(utcNow(), mul(item(), -7))), ticks('1970-01-01T00:00:00Z')), 10000000)",
												"appid": "@activity('Web1').output.value",
												"lat": "42.3601",
												"lon": "-71.3824",
												"dataType": "\"hour\""
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_Historical",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Date_Range": {
						"type": "Array",
						"defaultValue": [
							{
								"Start_Date": "2023-09-18T00:00:00Z",
								"End_Date": "2023-09-24T00:00:00Z"
							},
							{
								"Start_Date": "2023-09-25T00:00:00Z",
								"End_Date": "2023-10-01T00:00:00Z"
							},
							{
								"Start_Date": "2023-10-02T00:00:00Z",
								"End_Date": "2023-10-08T00:00:00Z"
							},
							{
								"Start_Date": "2023-10-09T00:00:00Z",
								"End_Date": "2023-10-15T00:00:00Z"
							},
							{
								"Start_Date": "2023-10-16T00:00:00Z",
								"End_Date": "2023-10-22T00:00:00Z"
							},
							{
								"Start_Date": "2023-10-23T00:00:00Z",
								"End_Date": "2023-10-29T00:00:00Z"
							},
							{
								"Start_Date": "2023-10-30T00:00:00Z",
								"End_Date": "2023-11-05T00:00:00Z"
							},
							{
								"Start_Date": "2023-11-06T00:00:00Z",
								"End_Date": "2023-11-12T00:00:00Z"
							},
							{
								"Start_Date": "2023-11-13T00:00:00Z",
								"End_Date": "2023-11-19T00:00:00Z"
							},
							{
								"Start_Date": "2023-11-20T00:00:00Z",
								"End_Date": "2023-11-26T00:00:00Z"
							},
							{
								"Start_Date": "2023-11-27T00:00:00Z",
								"End_Date": "2023-12-03T00:00:00Z"
							},
							{
								"Start_Date": "2023-12-04T00:00:00Z",
								"End_Date": "2023-12-10T00:00:00Z"
							},
							{
								"Start_Date": "2023-12-11T00:00:00Z",
								"End_Date": "2023-12-17T00:00:00Z"
							},
							{
								"Start_Date": "2023-12-18T00:00:00Z",
								"End_Date": "2023-12-24T00:00:00Z"
							},
							{
								"Start_Date": "2023-12-25T00:00:00Z",
								"End_Date": "2023-12-31T00:00:00Z"
							},
							{
								"Start_Date": "2024-01-01T00:00:00Z",
								"End_Date": "2024-01-07T00:00:00Z"
							},
							{
								"Start_Date": "2024-01-08T00:00:00Z",
								"End_Date": "2024-01-14T00:00:00Z"
							},
							{
								"Start_Date": "2024-01-15T00:00:00Z",
								"End_Date": "2024-01-21T00:00:00Z"
							},
							{
								"Start_Date": "2024-01-22T00:00:00Z",
								"End_Date": "2024-01-28T00:00:00Z"
							},
							{
								"Start_Date": "2024-01-29T00:00:00Z",
								"End_Date": "2024-02-04T00:00:00Z"
							},
							{
								"Start_Date": "2024-02-05T00:00:00Z",
								"End_Date": "2024-02-11T00:00:00Z"
							},
							{
								"Start_Date": "2024-02-12T00:00:00Z",
								"End_Date": "2024-02-18T00:00:00Z"
							},
							{
								"Start_Date": "2024-02-19T00:00:00Z",
								"End_Date": "2024-02-25T00:00:00Z"
							},
							{
								"Start_Date": "2024-02-26T00:00:00Z",
								"End_Date": "2024-03-03T00:00:00Z"
							},
							{
								"Start_Date": "2024-03-04T00:00:00Z",
								"End_Date": "2024-03-10T00:00:00Z"
							},
							{
								"Start_Date": "2024-03-11T00:00:00Z",
								"End_Date": "2024-03-17T00:00:00Z"
							},
							{
								"Start_Date": "2024-03-18T00:00:00Z",
								"End_Date": "2024-03-24T00:00:00Z"
							},
							{
								"Start_Date": "2024-03-25T00:00:00Z",
								"End_Date": "2024-03-31T00:00:00Z"
							},
							{
								"Start_Date": "2024-04-01T00:00:00Z",
								"End_Date": "2024-04-07T00:00:00Z"
							},
							{
								"Start_Date": "2024-04-08T00:00:00Z",
								"End_Date": "2024-04-14T00:00:00Z"
							},
							{
								"Start_Date": "2024-04-15T00:00:00Z",
								"End_Date": "2024-04-21T00:00:00Z"
							},
							{
								"Start_Date": "2024-04-22T00:00:00Z",
								"End_Date": "2024-04-28T00:00:00Z"
							},
							{
								"Start_Date": "2024-04-29T00:00:00Z",
								"End_Date": "2024-05-05T00:00:00Z"
							},
							{
								"Start_Date": "2024-05-06T00:00:00Z",
								"End_Date": "2024-05-12T00:00:00Z"
							},
							{
								"Start_Date": "2024-05-13T00:00:00Z",
								"End_Date": "2024-05-19T00:00:00Z"
							},
							{
								"Start_Date": "2024-05-20T00:00:00Z",
								"End_Date": "2024-05-26T00:00:00Z"
							},
							{
								"Start_Date": "2024-05-27T00:00:00Z",
								"End_Date": "2024-06-02T00:00:00Z"
							},
							{
								"Start_Date": "2024-06-03T00:00:00Z",
								"End_Date": "2024-06-09T00:00:00Z"
							},
							{
								"Start_Date": "2024-06-10T00:00:00Z",
								"End_Date": "2024-06-16T00:00:00Z"
							},
							{
								"Start_Date": "2024-06-17T00:00:00Z",
								"End_Date": "2024-06-23T00:00:00Z"
							},
							{
								"Start_Date": "2024-06-24T00:00:00Z",
								"End_Date": "2024-06-30T00:00:00Z"
							},
							{
								"Start_Date": "2024-07-01T00:00:00Z",
								"End_Date": "2024-07-07T00:00:00Z"
							},
							{
								"Start_Date": "2024-07-08T00:00:00Z",
								"End_Date": "2024-07-14T00:00:00Z"
							},
							{
								"Start_Date": "2024-07-15T00:00:00Z",
								"End_Date": "2024-07-21T00:00:00Z"
							},
							{
								"Start_Date": "2024-07-22T00:00:00Z",
								"End_Date": "2024-07-28T00:00:00Z"
							},
							{
								"Start_Date": "2024-07-29T00:00:00Z",
								"End_Date": "2024-08-04T00:00:00Z"
							},
							{
								"Start_Date": "2024-08-05T00:00:00Z",
								"End_Date": "2024-08-11T00:00:00Z"
							},
							{
								"Start_Date": "2024-08-12T00:00:00Z",
								"End_Date": "2024-08-18T00:00:00Z"
							},
							{
								"Start_Date": "2024-08-19T00:00:00Z",
								"End_Date": "2024-08-25T00:00:00Z"
							},
							{
								"Start_Date": "2024-08-26T00:00:00Z",
								"End_Date": "2024-09-01T00:00:00Z"
							},
							{
								"Start_Date": "2024-09-02T00:00:00Z",
								"End_Date": "2024-09-08T00:00:00Z"
							},
							{
								"Start_Date": "2024-09-09T00:00:00Z",
								"End_Date": "2024-09-15T00:00:00Z"
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Historical_Weather')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_Historical')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Air_Pollution')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Air_Pollution",
						"folderPath": "Bronze",
						"fileSystem": "container-ds598"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Historical')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Bronze/data/2.5/history",
						"fileSystem": "container-ds598"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"message": {
							"type": "string"
						},
						"cod": {
							"type": "string"
						},
						"city_id": {
							"type": "integer"
						},
						"calctime": {
							"type": "number"
						},
						"cnt": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Air_Pollution')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Air_Pollution",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"lat": {
						"type": "string",
						"defaultValue": "42.3601"
					},
					"lon": {
						"type": "string",
						"defaultValue": "-71.0589"
					},
					"start": {
						"type": "string",
						"defaultValue": "@div(sub(ticks(addDays(utcNow(), add(-7, mul(item(), -7)))), ticks('1970-01-01T00:00:00Z')), 10000000)"
					},
					"end": {
						"type": "string",
						"defaultValue": "@div(sub(ticks(addDays(utcNow(), mul(item(), -7))), ticks('1970-01-01T00:00:00Z')), 10000000)"
					},
					"appid": {
						"type": "string",
						"defaultValue": "@activity('Web1').output.value"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "data/2.5/air_pollution/history?lat=@{dataset().lat}&lon=@{dataset().lon}&start=@{dataset().start}&end=@{dataset().end}&appid=@{activity('Web1').output.value}",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Air_Pollution')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historical_Weather')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Historical",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"start": {
						"type": "string",
						"defaultValue": "@div(sub(ticks(addDays(utcNow(), add(-7, mul(item(), -7)))), ticks('1970-01-01T00:00:00Z')), 10000000)"
					},
					"end": {
						"type": "string",
						"defaultValue": "@div(sub(ticks(addDays(utcNow(), mul(item(), -7))), ticks('1970-01-01T00:00:00Z')), 10000000)"
					},
					"appid": {
						"type": "string",
						"defaultValue": "@activity('Web1').output.value"
					},
					"lat": {
						"type": "string",
						"defaultValue": "42.3601"
					},
					"lon": {
						"type": "string",
						"defaultValue": "-71.3824"
					},
					"dataType": {
						"type": "string",
						"defaultValue": "\"hour\""
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "data/2.5/history/city?lat=@{dataset().lat}&lon=@{dataset().lon}&type=@{dataset().dataType}&start=@{dataset().start}&end=@{dataset().end}&appid=@{dataset().appid}",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Historical')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Air_Pollution')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('Air_Pollution_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GitHub')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "GitHub",
				"typeProperties": {
					"username": "[parameters('GitHub_properties_typeProperties_username')]",
					"credential": {
						"type": "SecureString",
						"value": "[parameters('GitHub_credential')]"
					},
					"encryptedCredential": "ew0KICAiVmVyc2lvbiI6ICIyMDE3LTExLTMwIiwNCiAgIlByb3RlY3Rpb25Nb2RlIjogIktleSIsDQogICJTZWNyZXRDb250ZW50VHlwZSI6ICJQbGFpbnRleHQiLA0KICAiQ3JlZGVudGlhbElkIjogIkRBVEFGQUNUT1JZQDQ2RTMxOEQxLTNBMzktNDVBMi04NTBBLTRFRDAxM0I5NjMzOV9jODYxMTM1ZS1mOWE3LTQ4NWItOGMxNC03MDliMmVjN2VhNDkiDQp9"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historical')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('Historical_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/KeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Storage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Storage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}